#! /bin/sh

### BEGIN INIT INFO
# Provides:          Headphones
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of Headphones
# Description:       starts instance of Headphones using start-stop-daemon
### END INIT INFO

set -e

############### BEGIN EDIT ME ################
RUN_AS=headphones
RUN_GRP=users
APP_PATH=/opt/headphones
DAEMON=/usr/bin/python
PID_FILE=/var/run/headphones/headphones.pid
PID_PATH=$(dirname $PID_FILE)
NAME=headphones
DESC=headphones
DATA_DIR=/home/headphones/.headphones
EXTRA_DAEMON_OPTS=" --datadir=${DATA_DIR} --config=${DATA_DIR}/config.ini"
DAEMON_OPTS=" $APP_PATH/Headphones.py --quiet --daemon --nolaunch --pidfile=${PID_FILE} ${EXTRA_DAEMON_OPTS}"
############### END EDIT ME ##################

# Get lsb functions
. /lib/lsb/init-functions

# Create PID directory if not exist and ensure the Headphones user can write to it
if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
    chown $RUN_AS $PID_PATH
fi

# Create DATA_DIR directory if not exist and ensure the Headphones user can write to it
if [ ! -d $DATA_DIR ]; then
    mkdir -p $DATA_DIR
    chown $RUN_AS $DATA_DIR
fi

# Create logs directory if not exist and ensure the Headphones user can write to it
if [ ! -d $DATA_DIR/logs ]; then
    mkdir -p $DATA_DIR/logs
    chown $RUN_AS $DATA_DIR/logs
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        echo "Removing stale $PID_FILE"
        rm $PID_FILE
    fi
fi

if [ ! -f $DATA_DIR/config.ini ]; then
    echo "[General]
launch_browser = 0
log_dir = /home/headphones/.headphones/logs
cache_dir = /home/headphones/.headphones/cache
git_path = git
folder_permissions = 0777
file_permissions = 0777" > $DATA_DIR/config.ini
    chown $RUN_AS $PID_PATH
    chown $RUN_AS $DATA_DIR/config.ini
    chmod 775 $DATA_DIR/config.ini
fi



is_running() {
    if [ ! -e $PID_FILE ]; then
        return 1
    fi
    return 0
}

start() {
  if ! is_running; then
    chmod 775 /home/headphones/.headphones -R
    echo "Starting $DESC"
    sudo -u $RUN_AS $DAEMON $DAEMON_OPTS &> /dev/null
  else
    echo "$DESC is running"
  fi
}

stop() {
  if is_running; then
    echo "Stopping $DESC"
    start-stop-daemon --stop --pidfile $PID_FILE --retry 15
  fi
}

restart() {
  if is_running; then
    stop
  fi
  echo "Restarting $DESC"
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status_of_proc -p $PID_FILE "$DAEMON" "$NAME"
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
